/* Autogenerated file. Do not edit manually. */

/* tslint:disable */
/* eslint-disable */

/*
  Fuels version: 0.38.0
  Forc version: 0.35.5
  Fuel-Core version: 0.17.3
*/

import type {
  BigNumberish,
  BN,
  BytesLike,
  Contract,
  DecodedValue,
  FunctionFragment,
  Interface,
  InvokeFunction,
} from 'fuels';

import type { Enum } from "./common";

export type IdentityInput = Enum<{ Address: AddressInput, ContractId: ContractIdInput }>;
export type IdentityOutput = Enum<{ Address: AddressOutput, ContractId: ContractIdOutput }>;
export type InvalidErrorInput = Enum<{ IncorrectAssetId: ContractIdInput, NotEnoughTokens: BigNumberish, OnlyOwner: IdentityInput }>;
export type InvalidErrorOutput = Enum<{ IncorrectAssetId: ContractIdOutput, NotEnoughTokens: BN, OnlyOwner: IdentityOutput }>;

export type AddressInput = { value: string };
export type AddressOutput = AddressInput;
export type ContractIdInput = { value: string };
export type ContractIdOutput = ContractIdInput;
export type PropertyInput = { id: BigNumberish, price: BigNumberish, owner: IdentityInput, metadata: PropertyMetadataInput };
export type PropertyOutput = { id: BN, price: BN, owner: IdentityOutput, metadata: PropertyMetadataOutput };
export type PropertyMetadataInput = { name: string, location: string, area_sq_ft: BigNumberish, bedrooms: BigNumberish, description: string, bathrooms: BigNumberish, images_url: BigNumberish };
export type PropertyMetadataOutput = { name: string, location: string, area_sq_ft: number, bedrooms: number, description: string, bathrooms: number, images_url: BN };

interface ContractAbiInterface extends Interface {
  functions: {
    buy_property: FunctionFragment;
    get_count: FunctionFragment;
    get_property: FunctionFragment;
    initialize_owner: FunctionFragment;
    list_property: FunctionFragment;
    withdraw_funds: FunctionFragment;
  };

  encodeFunctionData(functionFragment: 'buy_property', values: [BigNumberish]): Uint8Array;
  encodeFunctionData(functionFragment: 'get_count', values: []): Uint8Array;
  encodeFunctionData(functionFragment: 'get_property', values: [BigNumberish]): Uint8Array;
  encodeFunctionData(functionFragment: 'initialize_owner', values: []): Uint8Array;
  encodeFunctionData(functionFragment: 'list_property', values: [BigNumberish, PropertyMetadataInput]): Uint8Array;
  encodeFunctionData(functionFragment: 'withdraw_funds', values: []): Uint8Array;

  decodeFunctionData(functionFragment: 'buy_property', data: BytesLike): DecodedValue;
  decodeFunctionData(functionFragment: 'get_count', data: BytesLike): DecodedValue;
  decodeFunctionData(functionFragment: 'get_property', data: BytesLike): DecodedValue;
  decodeFunctionData(functionFragment: 'initialize_owner', data: BytesLike): DecodedValue;
  decodeFunctionData(functionFragment: 'list_property', data: BytesLike): DecodedValue;
  decodeFunctionData(functionFragment: 'withdraw_funds', data: BytesLike): DecodedValue;
}

export class ContractAbi extends Contract {
  interface: ContractAbiInterface;
  functions: {
    buy_property: InvokeFunction<[property_id: BigNumberish], void>;
    get_count: InvokeFunction<[], BN>;
    get_property: InvokeFunction<[item_id: BigNumberish], PropertyOutput>;
    initialize_owner: InvokeFunction<[], IdentityOutput>;
    list_property: InvokeFunction<[price: BigNumberish, metadata: PropertyMetadataInput], void>;
    withdraw_funds: InvokeFunction<[], void>;
  };
}
